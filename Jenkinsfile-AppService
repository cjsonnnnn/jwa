def remote=[:]
remote.name = 'vm-lab1'
remote.host = '192.168.18.21'
remote.allowAnyHosts = true

pipeline {
  // agent none
  // agent any
  // agent { label 'agent-maven' }
  // agent { label 'agent-jenkins' }
  agent { label 'agent-dind' }
  // agent { label 'built-in' }
  tools {
      jfrog 'jfrog-cli'
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  environment {
    DOCKERHUB_CREDENTIALS = credentials('dockerhub-jpiay')
    PI_CREDS=credentials('ssh-vm-lab1')
  }
  stages {
    stage('Build ') {
      steps {
        build
        sh 'docker build -t jpiay/jwa:latest .'
        sh 'mvn clean package'
      }
    }
    stage('Publish to Artifactory') {
      steps {
        // upload to Artifactory
        jf 'rt bp'
        jf 'rt u target/*.jar example-repo-local/'
      }
    }
    stage('Docker: Build Image'){
      steps {
        jf 'rt dl example-repo-local/target/demo-0.0.1-SNAPSHOT.jar'
        sh 'docker build -t jpiay/jwa:0.0.1 .'
      }
    }
    stage('Docker: Login') {
      steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }
    }
    stage('Docker: Push to Registry') {
      steps {
        sh 'docker push jpiay/jwa:0.0.1'
      }
    }
    stage('Docker: Pull and Deploy') {
      steps{
        script {
          remote.user=env.PI_CREDS_USR
          remote.password=env.PI_CREDS_PSW
        }
        sshCommand(remote: remote, command: "sudo docker pull jpiay/jwa:0.0.1")
        sshCommand(remote: remote, command: "sudo docker run -d --name java-web-app -p 8090:8080 --restart unless-stopped jpiay/jwa:0.0.1")
      }
    }  
  }
  post {
    always {
      sh 'docker logout'
      sleep(5)
      cleanWs()  // Deletes all files in the workspace
    }
  }
}